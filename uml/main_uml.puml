@startuml

class Application
{
    +run()
}



package "Payment System"{
   class CashMachine
   {
       +enterCoin(Denomination coins)
       +acceptPayment(): void
       -disposeChange(): void
   }

   class Denomination
   {
       -valueInGR: int
       +amount: int
   }

   interface CashChangeStrategy
   {

   }
}


package "Physical User Interface"{
    interface IDisplay{
        +ShowMessage(String msg): void
    }

    interface IPaymentDevice{
        +disposeChange(Denomination coins): void
        -acceptButtonPressed(): void
        -cancelButtonPressed(): void
        +addObserverToButton(ButtonKey key, IGuiEventListener observer): void
    }

    enum ButtonKey{
        ACCEPT_BUTTON
        CANCEL_BUTTON
    }


    interface IGuiEventListener
    {
        -buttonPressed(): void
    }
    'note left: observer\npattern

    class TestingConsoleUI implements IDisplay,IPaymentDevice{
    }

    interface IGate{
            +open()
            -closeIfClear()
        }
}

package ParkingSystem{
    interface IPlaceCounter{
        +tryDriveIn(): void
        +driveOut(): void
    }

    class NormalPlaces implements IPlaceCounter
    class HandicappedPlaces implements IPlaceCounter
    ' ? class PremiumPlaces implements IPlaceCounter
}

package PremiumUser{

    interface IDriverDatabase
    {
        +register(String driversPlate): void
    }
    class PremiumProxy implements IDriverDatabase{

    }
    class PremiumDatabase implements IDriverDatabase{
    }


    PremiumProxy --> PremiumDatabase :uses
}

PremiumDatabase <.. CashMachine :check if premium\n(free entrance)




CashMachine o--> CashChangeStrategy
CashMachine *-- Denomination
Denomination . CashChangeStrategy

IGate <-- CashMachine :uses
IGuiEventListener <|.. CashMachine
CashMachine --> IPaymentDevice :uses

IPaymentDevice o--"multiple lists" IGuiEventListener

Application --> CashMachine :initialize\npayment
Application --> IPlaceCounter :check if\navailable space
PremiumProxy <-- "register user" Application

IPaymentDevice - ButtonKey

@enduml